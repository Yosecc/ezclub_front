import{_ as e}from"./inputsLayaut.vue_vue&type=style&index=0&lang.ab886c12.js";import{_ as a}from"./formLayaut.vue_vue&type=style&index=0&lang.e1e53d60.js";import{d as s,b as t,w as o,o as l,h as n,D as i,B as r,U as c,j as u,k as d}from"./vendor.20c6e26b.js";import{i as p,s as m,b as f}from"./Memberships.63ffa689.js";import{g as v}from"./Diciplines.7900d086.js";import{p as h,c as b,n as y,s as g,v as _}from"./Mixin.d9b7e9cd.js";var j=s({expose:[],props:{type:{type:String,default:"create"},buttons:{type:Array,default:["save","back"]},isLoading:{type:Boolean,default:!1}},setup(s){const j=s,x=r(),A=c(),E=t((()=>"create"==j.type?{title:"Add a new membership",subtitle:"Add information for a new club membership"}:{title:"Edit membership",subtitle:"Edit information for a club membership"})),S=t((()=>p.value.find((e=>"locations_options"==e.name)))),L=t((()=>p.value.find((e=>"locations"==e.name))));o(L.value,(e=>{k(e)}));const k=e=>{let a=[];e.model.length>0&&(e.model.forEach((s=>{let t=e.values.find((e=>e.id==s));"create"==j.type&&a.push({name:"locationsSaleOrAccess",value:t.id,placeholder:t.name,values:[{placeholder:"Access",name:"access",model:["access"]},{placeholder:"Sale",name:"sale",model:["sale"]}]})})),g(p,"locations_options",a)),v(L.value.model).then((e=>{g(p,"diciplines",e.data)}))},w=t((()=>p.value.find((e=>"diciplines"==e.name))));o(w.value,(e=>{let a=parseFloat(_(p.value,"diciplines_number"));isNaN(a)||e.model.length>a&&y.error("You must select a limit of "+a+" diciplines")}));const D=()=>{let e=h(p.value),a=[];"create"==j.type&&e.locations.length>0&&(e.locations.forEach((e=>{let s=S.value.values.find((a=>a.value==e));a.push({id:e,access:s.values.find((e=>"access"==e.name)).model.length?1:0,sale:s.values.find((e=>"sale"==e.name)).model.length?1:0})})),e.locations=a,delete e.locations_options);let s=[],t=e.amounts;for(var o in t)s.push({recurrences_id:parseFloat(o),amount:parseFloat(t[o])});e.amounts=s,"create"==j.type?m(e).then((e=>{b(p.value),A.back()})).catch((e=>{for(var a in e.response.data.rerrores)e.response.data.rerrores[a].forEach((e=>{y.error(e)}))})):(console.log("este es"),console.log(e),f(x.query.id,e).then((e=>{y.success("Success")})))};return(t,o)=>{const r=e,c=a;return l(),n(c,{buttons:j.buttons,titles:i(E),"is-loading":s.isLoading,onSaveData:D},{default:u((()=>[d(r,{"inputs-step":i(p)},null,8,["inputs-step"])])),_:1},8,["buttons","titles","is-loading"])}}});export{j as _};
