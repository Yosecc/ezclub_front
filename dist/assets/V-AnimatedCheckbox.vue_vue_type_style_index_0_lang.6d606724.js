import{d as v,c as m,r as i,V as p,o as h,e as f,f as l,Y as k,u as x}from"./index.4457215e.js";const g=l("svg",{class:"checkmark",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 52 52"},[l("circle",{class:"checkmark-circle",cx:"26",cy:"26",r:"25",fill:"none"}),l("path",{class:"checkmark-check",fill:"none",d:"M14.1 27.2l7.1 7.2 16.7-16.8"})],-1);let w=0;var V=v({expose:[],props:{value:{type:[String,Number],default:void 0},modelValue:{type:Array,default:[]},color:{type:String,default:void 0,validator:a=>[void 0,"primary","info","success","warning","danger","purple"].indexOf(a)===-1?(console.warn(`V-AnimatedCheckbox: invalid "${a}" color. Should be primary, info, success, warning, danger, purple or undefined`),!1):!0}},emits:["update:modelValue"],setup(a,{emit:r}){const c=a,t=`animated-checkbox-${++w}`,n=m(()=>c.modelValue.includes(c.value)),s=i(null),o=i(null),u=()=>{s.value&&o.value&&(n.value?(s.value.classList.add("is-checked"),o.value.classList.add("is-opaque"),setTimeout(()=>{var e;(e=s.value)==null||e.classList.remove("is-unchecked")},150)):(s.value.classList.add("is-unchecked"),s.value.classList.remove("is-checked"),setTimeout(()=>{var e;(e=o.value)==null||e.classList.remove("is-opaque")},150)))};function d(){const e=[...c.modelValue];n.value?e.splice(e.indexOf(c.value),1):e.push(c.value),r("update:modelValue",e)}return p(u),(e,b)=>(h(),f("div",{ref:s,class:["animated-checkbox",[a.color&&"is-"+a.color]]},[l("input",k({id:t,type:"checkbox",checked:x(n),value:c.value},e.$attrs,{onChange:d}),null,16,["checked","value"]),l("label",{for:t,class:"checkmark-wrap"},[l("div",{ref:o,class:"shadow-circle"},null,512),g])],2))}});export{V as _};
